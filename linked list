#include<stdlib.h>
#include<string.h>
#include<stdio.h>
struct Student
{
    int studants_ID;
    char name[100];
    char last_name[100];
    float mid_term;
    float final;
    struct Student *next;
    
}* head;
void insert(int studants_ID, char* name, char* last_name, float final, float mid_term)
{
    
    struct Student * student = (struct Student *) malloc(sizeof(struct Student));
    student->studants_ID = studants_ID;
    strcpy(student->name, name);
    strcpy(student->last_name, last_name);
    student->final = final;
    student->mid_term = mid_term;
    student->next = NULL;
    
    if(head==NULL){
       
        head = student;
    }
    else{
       
        student->next = head;
        head = student;
    }
    
}
void search(int studants_ID)
{
    struct Student * temp = head;
    while(temp!=NULL){
        if(temp->studants_ID==studants_ID){
            printf("studants_ID: %d\n", temp->studants_ID);
            printf("Name: %s\n", temp->name);
            printf("last name: %s\n", temp->last_name);
            printf("final grade: %0.4f\n", temp->final);
            printf("mid term grade: %0.4f\n", temp->mid_term);
            return;
        }
        temp = temp->next;
    }
    printf("Student with studants ID %d is not found !!!\n", studants_ID);
}
void update(int studants_ID)
{
    
    struct Student * temp = head;
    while(temp!=NULL){
        
        if(temp->studants_ID==studants_ID){
            printf("Record with studants ID %d Found !!!\n", studants_ID);
            printf("Enter new name: ");
            scanf("%s", temp->name);
            printf("Enter new last name: ");
            scanf("%s", temp->last_name);
            printf("Enter new final grade: ");
            scanf("%f",&temp->final);
            printf("Enter mid term grade");
            scanf("f",&temp->mid_term);
            printf("Updation Successful!!!\n");
            return;
        }
        temp = temp->next;
        
    }
    printf("Student with studants ID %d is not found !!!\n", studants_ID);
    
}
void Delete(int studants_ID)
{
    struct Student * temp1 = head;
    struct Student * temp2 = head; 
    while(temp1!=NULL){
        
        if(temp1->studants_ID==studants_ID){
            
            printf("Record with studants ID %d Found !!!\n", studants_ID);
            
            if(temp1==temp2){
                
                head = head->next;
                free(temp1);
            }
            else{
                
                temp2->next = temp1->next;
                free(temp1); 
            }
            
            printf("Record Successfully Deleted !!!\n");
            return;
            
        }
        temp2 = temp1;
        temp1 = temp1->next;
        
    }
    printf("Student with studants ID %d is not found !!!\n", studants_ID);
    
}
void display()
{
    struct Student * temp = head;
    while(temp!=NULL){
        
        printf("studants ID: %d\n", temp->studants_ID);
        printf("Name: %s\n", temp->name);
        printf("last name: %s\n", temp->last_name);
        printf("final degre: %0.4f\n\n", temp->final);
        printf("final degre: %0.4f\n\n", temp->mid_term);
        temp = temp->next;
        
    }
}
int main()
{
    head = NULL;
    int choice;
    char name[100];
    char last_name[100];
    int studants_ID;
    float mid_term;
    float final;
    printf("1 to insert student details\n2 to search for student details\n3 to delete student details\n4 to update student details\n5 to display all student details");
    do
    {
        printf("\nEnter Choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
            case 1:
                printf("Enter studants ID: ");
                scanf("%d", &studants_ID);
                printf("Enter name: ");
                scanf("%s", name);
                printf("Enter last name: ");
                scanf("%s", last_name);
                printf("Enter final degre: ");
                scanf("%f", &final);
                printf("Enter mid term degre: ");
                scanf("%f", &mid_term);
                insert(studants_ID, name, last_name, final,mid_term);
                break;
            case 2:
                printf("studants ID number to search: ");
                scanf("%d", &studants_ID);
                search(studants_ID);
                break;
            case 3:
                printf("Enter studants ID to delete: ");
                scanf("%d", &studants_ID);
                Delete(studants_ID);
                break;
            case 4:
                printf("Enter studants ID to update: ");
                scanf("%d", &studants_ID);
                update(studants_ID);
                break;
            case 5:
                display();
                break;
        }
        
    } while (choice != 0);
}
